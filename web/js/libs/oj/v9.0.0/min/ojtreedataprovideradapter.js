/**
 * @license
 * Copyright (c) 2014, 2020, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["ojs/ojcore","jquery","ojs/ojdataprovideradapter-base","ojs/ojmap"],function(e,t,n,r){"use strict";class a extends n{constructor(e){super(e),this.treeDataSource=e,this._addTreeDataSourceEventListeners(),this._parentKey=null,this._parentInfoMap=new r}destroy(){this._removeTreeDataSourceEventListeners()}getChildDataProvider(e){if(this._parentInfoMap.has(e)){let t=new a(this.treeDataSource);return t._parentKey=e,t._parentInfoMap=this._parentInfoMap,t}return null}fetchFirst(e){return new this.AsyncIterable(new this.AsyncIterator(this._getFetchFunc(e),e))}getTotalSize(){return Promise.resolve(this.treeDataSource.getChildCount(this._parentKey))}isEmpty(){var e=this.treeDataSource.getChildCount();return-1===e?"unknown":e>0?"no":"yes"}getCapability(e){return e==a._SORT&&"full"==this.treeDataSource.getCapability(e)?{attributes:"multiple"}:"fetchByKeys"==e?{implementation:"iteration"}:"fetchByOffset"==e?{implementation:"iteration"}:null}_getFetchFunc(e){let t=this;if(null!=e&&null!=e[a._SORTCRITERIA]){let n=e[a._SORTCRITERIA][0][a._ATTRIBUTE],r=e[a._SORTCRITERIA][0][a._DIRECTION];return n=n,r=r,function(e,i){if(i){let i={};return i[a._KEY]=n,i[a._DIRECTION]=r,new Promise(function(n,r){t.treeDataSource.sort(i,{success:function(){n(t._getTreeDataSourceFetch(e)(e))},error:function(e){r(e)}})})}return t._getTreeDataSourceFetch(e)(e)}}return this._getTreeDataSourceFetch(e);var n,r}_getTreeDataSourceFetch(e){let t=this;return function(e,n){let r=t.treeDataSource.getSortCriteria();if(null!=r&&"none"!=r[a._DIRECTION]&&null==e[a._SORTCRITERIA]){e[a._SORTCRITERIA]=[];let n=new t.SortCriterion(t,r[a._KEY],r[a._DIRECTION]);e[a._SORTCRITERIA].push(n)}return t._isFetching=!0,new Promise(function(n,r){t.treeDataSource.fetchChildren(t._parentKey,{start:0,end:-1},{success:function(r){t._isFetching=!1;let i,s,h,o=[],l=[],u=r.getStart(),_=r.getCount();for(i=0;i<_;i++)s=r.getData(u+i),o.push(s),(h=r.getMetadata(u+i))[a._LEAF]||t._parentInfoMap.set(h[a._KEY],h),l.push(new t.ItemMetadata(t,h[a._KEY]));n(new t.AsyncIteratorReturnResult(t,new t.FetchListResult(t,e,o,l)))},error:function(e){t._isFetching=!1,r(e)}})})}}_addTreeDataSourceEventListeners(){this.removeAllListeners(),this.addListener("change",this._handleChange),this.addListener("refresh",this._handleRefresh)}_removeTreeDataSourceEventListeners(){this.removeListener("change"),this.removeListener("refresh")}_handleChange(e){let t=e[a._OPERATION];"insert"===t?this._handleInsert(e):"delete"===t?this._handleDelete(e):"update"===t&&this._handleUpdate(e)}_handleInsert(t){let n=t[a._DATA],r=t[a._INDEX],i=t[a._KEY],s=t[a._PARENT],h=new this.ItemMetadata(this,i),o=new Set;o.add(i);let l=t[a._METADATA];null!=l&&l[a._LEAF]&&this._parentInfoMap.set(i,l);let u=new this.DataProviderAddOperationEventDetail(this,o,null,null,[s],[h],[n],[r]),_=new this.DataProviderMutationEventDetail(this,u,null,null);this.dispatchEvent(new e.DataProviderMutationEvent(_))}_handleDelete(t){let n=t[a._DATA],r=t[a._INDEX],i=t[a._KEY],s=new this.ItemMetadata(this,i),h=new Set;h.add(i),this._parentInfoMap.delete(i);let o=new this.DataProviderOperationEventDetail(this,h,[s],[n],[r]),l=new this.DataProviderMutationEventDetail(this,null,o,null);this.dispatchEvent(new e.DataProviderMutationEvent(l))}_handleUpdate(t){let n=t[a._DATA],r=t[a._INDEX],i=t[a._KEY],s=new this.ItemMetadata(this,i),h=new Set;h.add(i);let o=new this.DataProviderOperationEventDetail(this,h,[s],[n],[r]),l=new this.DataProviderMutationEventDetail(this,null,null,o);self.dispatchEvent(new e.DataProviderMutationEvent(l))}_handleRefresh(t){this._isFetching||(this._parentInfoMap.clear(),this.dispatchEvent(new e.DataProviderRefreshEvent))}}return a._SORTCRITERIA="sortCriteria",a._INDEX="index",a._PARENT="parent",a._LEAF="leaf",a._OPERATION="operation",e.TreeDataSourceAdapter=a,e.TreeDataSourceAdapter=a,e.FetchByKeysMixin.applyMixin(a),e.FetchByOffsetMixin.applyMixin(a),a});