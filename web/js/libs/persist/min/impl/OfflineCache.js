define(["./defaultCacheHandler","../persistenceStoreManager","../persistenceUtils","./logger"],function(a,b,c,d){"use strict";function e(a,b){if(!a)throw TypeError("A name must be provided to create an OfflineCache!");if(!b)throw TypeError("A persistence store must be provided to create an OfflineCache!");this._name=a,this._storeName=b,this._store=null,this._cacheKeys=[],this._createStorePromise,Object.defineProperty(this,"_STORE_NAMES_",{value:"_OPT_INT_SHRED_STORE_NAMES_",writable:!1})}function f(a,b,c){if(c&&c.length)for(var d=0;d<c.length;d++){var e=c[d];if(i(a,b,e.value))return e}return null}function g(a,b,c){var d=[];if(c&&c.length){d=c.filter(h(a,b,"value")).map(function(a){return a.value.responseData})}return d}function h(a,b,c){return function(d){var e;return e=c?d[c]:d,i(a,b,e)}}function i(a,b,c){if(a)return!0;if(!c||!b)return!1;var e=c.requestData.headers,f=c.responseData.headers,g=b.headers,h=f.vary;if(d.log("Offline Persistence Toolkit OfflineCache: Processing HTTP Vary header"),!h)return!0;if("*"===h.trim())return!1;for(var i=h.split(","),j=0;j<i.length;j++){var k=i[j].toLowerCase();k=k.trim();var l=g.get(k),m=e[k];if(d.log("Offline Persistence Toolkit OfflineCache: HTTP Vary header name: "+k),d.log("Offline Persistence Toolkit OfflineCache: Request HTTP Vary header value: "+l),d.log("Offline Persistence Toolkit OfflineCache: Cached HTTP Vary header value: "+m),!(!m&&!l||m&&l&&m===l))return!1}return!0}function j(b,c,e){if(c){d.log("Offline Persistence Toolkit OfflineCache: Converting cached entry to Response object");var f=!1;e&&e.ignoreBody&&(f=!0);var g=c.bodyAbstract;return a.constructResponse(c).then(function(c){if(null!=b.url&&b.url.length>0&&null==c.headers.get("x-oracle-jscpt-response-url")&&c.headers.set("x-oracle-jscpt-response-url",b.url),!f&&g){var e;try{e=JSON.parse(g)}catch(a){d.error("error parsing json "+g)}return a.fillResponseBodyWithShreddedData(b,e,c)}return c})}return Promise.resolve()}function k(a,b,c){if(b&&b.length){var d=b.map(function(b){return j(a,b,c)});return Promise.all(d)}return Promise.resolve()}function l(a){var b=a.map(function(a){return{name:a.name,keys:a.keys?a.keys.reduce(function(a,b){return b?a.push(b):d.warn("should not have undefined key in the shredded data"),a},[]):a.keys,resourceType:a.resourceType}});return JSON.stringify(b)}function m(b,c,d){if(c){var e=a.constructSearchCriteria(c,d);e.fields=["key","value"];var f=d&&d.ignoreVary;return b.find(e).then(function(a){if(a&&a.length){return a.filter(h(f,c,"value")).map(function(a){return a.key})}return[]})}return b.keys()}return e.prototype.getName=function(){return this._name},e.prototype.add=function(a){d.log("Offline Persistence Toolkit OfflineCache: add()");var b=this;return fetch(a).then(function(c){return b.put(a,c)})},e.prototype.addAll=function(a){d.log("Offline Persistence Toolkit OfflineCache: addAll()");var b=a.map(this.add,this);return Promise.all(b)},e.prototype.match=function(a,b){return d.log("Offline Persistence Toolkit OfflineCache: match() for Request with url: "+a.url),this._getCacheEntries(a,b).then(function(c){var d=b&&b.ignoreVary,e=f(d,a,c);if(e)return j(a,e.value.responseData,b)}).catch(function(b){d.log("error finding match for request with url: "+a.url)})},e.prototype._getCacheEntries=function(b,c){var d=this;return this._getStore().then(function(e){var f=a.getMatchedCacheKeys(b,c,d._cacheKeys);if(f&&f.length){var g=f.map(function(a){return e.findByKey(a).then(function(b){return{key:a,value:b}})});return Promise.all(g)}var h=a.constructSearchCriteria(b,c);return h.fields=["key","value"],e.find(h)})},e.prototype._matchByKey=function(a,b,c){return this._getStore().then(function(a){return a.findByKey(b)}).then(function(b){return b?j(a,b.responseData,c):void 0})},e.prototype._internalMatch=function(b,c){var e=this;return e._getStore().then(function(d){var f=a.getMatchedCacheKeys(b,c,e._cacheKeys);if(f&&f.length){var g=f.map(function(a){return d.findByKey(a)});return Promise.all(g).then(function(a){return a.map(function(a,b){return{key:f[b],value:a}})})}var h=a.constructSearchCriteria(b,c);return h.fields=["key","value"],d.find(h)}).then(function(a){if(a){var e=c&&c.ignoreVary,g=f(e,b,a);if(g){var h={key:g.key},i=g.value.responseData.bodyAbstract;if(i)try{var j=JSON.parse(i);j?1===j.length&&"single"===j[0].resourceType?h.resourceType="single":h.resourceType="collection":h.resourceType="unknown"}catch(a){return void d.log("internal error: invalid body abstract")}else h.resourceType="unknown";return h}}}).catch(function(a){d.log("error finding match internal")})},e.prototype.matchAll=function(a,b){return d.log("Offline Persistence Toolkit OfflineCache: matchAll() for Request with url: "+a.url),this._getCacheEntries(a,b).then(function(c){var d=b&&b.ignoreVary,e=g(d,a,c);return k(a,e,b)}).catch(function(b){d.log("error finding all matches for request with url: "+a.url)})},e.prototype._getStore=function(){var a=this;if(a._store)return Promise.resolve(a._store);if(a._createStorePromise)return a._createStorePromise;var c;return a._createStorePromise=b.openStore(a._storeName,{index:["metadata.baseUrl","metadata.url","metadata.created"],skipMetadata:!0}).then(function(a){return c=a,a.keys()}).then(function(b){return a._cacheKeys=b,a._store=c,a._store}),a._createStorePromise},e.prototype.put=function(b,c){d.log("Offline Persistence Toolkit OfflineCache: put() for Request with url: "+b.url);var e,f=this;return f._getStore().then(function(){return a.constructRequestResponseCacheData(b,c)}).then(function(d){var g=f._store;return e=d.key,a.hasShredder(b)?a.shredResponse(b,c).then(function(b){if(!b)return void(e=null);f._updateShreddedStoreNames(b.map(function(a){return a.name}));var c=[];return d.value.responseData.bodyAbstract=l(b),c.push(g.upsert(d.key,d.metadata,d.value)),c.push(a.cacheShreddedData(b)),Promise.all(c)}):g.upsert(d.key,d.metadata,d.value)}).then(function(){e&&f._cacheKeys.indexOf(e)<0&&f._cacheKeys.push(e)}).catch(function(a){d.error("error in cache.put() for Request with url: "+b.url)})},e.prototype._updateShreddedStoreNames=function(a){if(!a)return void localStorage.setItem(this._STORE_NAMES_,"");var b=localStorage.getItem(this._STORE_NAMES_);if(b){var c;try{c=JSON.parse(b)}catch(a){c=[]}a.forEach(function(a){c.indexOf(a)<0&&c.push(a)}),b=JSON.stringify(c)}else b=JSON.stringify(a);localStorage.setItem(this._STORE_NAMES_,b)},e.prototype._getShreddedStoreNames=function(){var a=[],b=localStorage.getItem(this._STORE_NAMES_);if(b)try{a=JSON.parse(b)}catch(a){d.log("error getting shredded store names from localStorage")}return a},e.prototype.delete=function(b,c){if(!b)return d.warn("Offline Persistence Toolkit OfflineCache: delete() request is a required parameter. To clear the cache, please call clear()"),Promise.resolve(!1);d.log("Offline Persistence Toolkit OfflineCache: delete() for Request with url: "+b.url);var e=this;return e._getStore().then(function(f){if(a.hasShredder(b)){var g=a.constructSearchCriteria(b,c);g.fields=["key","value"];var i=c&&c.ignoreVary;return f.find(g).then(function(c){if(c&&c.length){var g=c.filter(h(i,b,"value")),j=[];return g.forEach(function(b){j.push(f.removeByKey(b.key));var c=e._cacheKeys.indexOf(b.key);c>=0&&e._cacheKeys.splice(c,1),b.value.responseData.bodyAbstract&&b.value.responseData.bodyAbstract.length&&j.push(a.deleteShreddedData(JSON.parse(b.value.responseData.bodyAbstract)))}),Promise.all(j).then(function(){return d.log("Offline Persistence Toolkit OfflineCache: all matching entries are deleted from both the cache store and the shredded store."),!0})}return!1})}return m(f,b,c).then(function(a){if(a&&a.length){var b=a.map(function(a){var b=e._cacheKeys.indexOf(a);return b>=0&&e._cacheKeys.splice(b,1),f.removeByKey(a)});return Promise.all(b)}return[]}).then(function(a){return!(!a||!a.length)})}).catch(function(a){return d.log("Offline Persistence Toolkit OfflineCache: error occurred delete() for Request with url: "+b.url),!1})},e.prototype.keys=function(a,b){a?d.log("Offline Persistence Toolkit OfflineCache: keys() for Request with url: "+a.url):d.log("Offline Persistence Toolkit OfflineCache: keys()");var e=this;return e._getStore().then(function(){return m(e._store,a,b)}).then(function(a){var b=[];return a.forEach(function(a){b.push(e._store.findByKey(a).then(function(a){return c.requestFromJSON(a.requestData)}))}),Promise.all(b)}).catch(function(b){return d.log("Offline Persistence Toolkit OfflineCache: keys() error for Request with url: "+a.url),[]})},e.prototype.hasMatch=function(a,b){return d.log("Offline Persistence Toolkit OfflineCache: hasMatch() for Request with url: "+a.url),this._getCacheEntries(a,b).then(function(c){return null!==f(b&&b.ignoreVary,a,c)})},e.prototype.clear=function(){d.log("Offline Persistence Toolkit OfflineCache: clear()");var a=this;return a._getStore().then(function(c){var d=[];return d.push(c.delete()),a._getShreddedStoreNames().forEach(function(a){d.push(b.deleteStore(a))}),Promise.all(d).then(function(b){return a._updateShreddedStoreNames(null),a._cacheKeys=[],!0})}).catch(function(a){d.log("Offline Persistence Toolkit OfflineCache: clear() error")})},e});