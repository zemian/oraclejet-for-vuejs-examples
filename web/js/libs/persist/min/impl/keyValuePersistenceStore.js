define(["../PersistenceStore","./storageUtils","./logger"],function(a,b,c){"use strict";var d=function(b){a.call(this,b)};return d.prototype=new a,d.prototype.Init=function(a){return this._version=a&&a.version||"0",Promise.resolve()},d.prototype.getItem=function(a){throw TypeError("failed in abstract function")},d.prototype.removeByKey=function(a){throw TypeError("failed in abstract function")},d.prototype.keys=function(){throw TypeError("failed in abstract function")},d.prototype.findByKey=function(a){return c.log("Offline Persistence Toolkit keyValuePersistenceStore called by subclass: findByKey() with key: "+a),this.getItem(a).then(function(a){return a?Promise.resolve(a.value):Promise.resolve()})},d.prototype.find=function(a){c.log("Offline Persistence Toolkit keyValuePersistenceStore called by subclass: find() with expression: "+JSON.stringify(a));var d=this,e=[],f=[],a=a||{};return this.keys().then(function(c){for(var g=[],h=0;h<c.length;h++){var i=c[h];i&&g.push(function(c){return d.getItem(c).then(function(d){d&&b.satisfy(a.selector,d)&&(d.key=c,f.push(d))})}(i))}return Promise.all(g).then(function(){for(var c=b.sortRows(f,a.sort),g=0;g<c.length;g++)e.push(d._constructReturnObject(a.fields,c[g]));return Promise.resolve(e)})})},d.prototype.updateKey=function(a,b){c.log("Offline Persistence Toolkit keyValuePersistenceStore called by subclass: updateKey() with currentKey: "+a+" and new key: "+b);var d=this;return this.getItem(a).then(function(a){return a?d._insert(b,a.metadata,a.value):Promise.reject("No existing key found to update")}).then(function(){return d.removeByKey(a)})},d.prototype._constructReturnObject=function(a,c){return a?b.assembleObject(c,a):c.value},d.prototype._removeByKeyMapCallback=function(a){var b=this;return function(c){var d;return d=a?c[a]:c,b.removeByKey(d)}},d.prototype.delete=function(a){c.log("Offline Persistence Toolkit keyValuePersistenceStore called by subclass: delete() with expression: "+JSON.stringify(a));var b=this;if(!a)return this.deleteAll();var d=a;return d.fields=["key"],b.find(d).then(function(a){if(a&&a.length){var c=a.map(b._removeByKeyMapCallback("key"),b);return Promise.all(c)}return Promise.resolve()})},d.prototype.deleteAll=function(){c.log("Offline Persistence Toolkit keyValuePersistenceStore called by subclass: deleteAll()");var a,b=this,d=[];return this.keys().then(function(c){for(a=0;a<c.length;a++)d.push(b.removeByKey(c[a]));return Promise.all(d)})},d.prototype.upsert=function(a,b,d,e){c.log("Offline Persistence Toolkit keyValuePersistenceStore called by subclass: upsert() for key: "+a);var f=this;return this.getItem(a).then(function(c){if(c&&e){var g=c.metadata.versionIdentifier;if(g!==e)return Promise.reject({status:409});return b.versionIdentifier!==g?f._insert(a,b,d):Promise.resolve()}return f._insert(a,b,d)})},d.prototype.upsertAll=function(a){c.log("Offline Persistence Toolkit keyValuePersistenceStore called by subclass: upsertAll()");for(var b=[],d=0;d<a.length;d++){var e=a[d];b.push(this.upsert(e.key,e.metadata,e.value,e.expectedVersionIndentifier))}return Promise.all(b)},d});